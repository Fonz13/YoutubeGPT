0.0 3.419 are you ready to level up your coding 
1.8 3.9 skills by creating something that's 
3.419 4.5 never existed before utilizing both 
5.7 3.78 front end and back-end state-of-the-art 
7.919 4.081 technology in this video we're going to 
9.48 4.56 be creating a real world application and 
12.0 3.54 unraveling the magic of full stack 
14.04 4.14 development so if you're ready to build 
15.54 4.319 an application using react and fast API 
18.18 4.32 and let's dive into this video together 
19.859 6.541 alright so in this application we are 
22.5 6.359 going to be building a react in fast API 
26.4 5.279 application so react on our front end 
28.859 4.801 and fast API for our back end so the 
31.679 4.201 very first thing we need to do is let's 
33.66 4.98 go ahead and just create two directories 
35.88 7.32 so one we're going to name react and the 
38.64 6.239 other one we are going to name fast API 
43.2 3.66 now as always let's open up a new 
44.879 5.34 terminal and make sure you're in our 
46.86 5.76 fast API react app and the very first 
50.219 4.141 thing we're going to do here is create a 
52.62 4.38 siled environment so a virtual 
54.36 5.039 environment for our python code and our 
57.0 6.12 fast API application 
59.399 7.561 so let's start by saying python3 Dash m 
63.12 7.28 v e and V EnV to create the virtual 
66.96 3.44 environment for this project 
70.5 5.939 let's then go ahead and say Source bin 
74.22 3.84 slash 
76.439 6.121 e and V 
78.06 6.72 slash bin slash activate 
82.56 4.98 this will activate our virtual 
84.78 4.979 environment and now inside here we want 
87.54 4.399 to say pip install 
89.759 6.121 fast API 
91.939 5.561 uvicorn and SQL Alchemy 
95.88 4.08 we want to make sure that we install 
97.5 4.32 fast API unicorn and SQL Alchemy because 
99.96 4.199 those are the three dependencies we need 
101.82 5.22 for this application 
104.159 5.701 so after that let's go inside our fast 
107.04 4.14 API directory and let's right click and 
109.86 3.539 say new file 
111.18 4.32 here we're going to create a main.pi 
113.399 4.801 file 
115.5 4.32 we are going to create a database.pi 
118.2 3.36 file 
119.82 3.78 and we're going to be creating a 
121.56 4.62 models.pi file 
123.6 4.92 now our models are going to be the table 
126.18 3.9 for sqlite application so we're going to 
128.52 3.06 be using sqlite as our relational 
130.08 3.0 database 
131.58 3.239 our database is going to be the 
133.08 4.2 connection Port from our sqlite 
134.819 5.101 application to our fast API application 
137.28 4.38 and then our main.pi file is going to be 
139.92 3.48 like the bread and butter of our fast 
141.66 3.659 API application 
143.4 5.64 so let's start by going into our 
145.319 8.341 database and let's say from SQL Alchemy 
149.04 8.76 we want to import our create engine 
153.66 7.079 we want to say from SQL Alchemy dot orm 
157.8 5.159 we want to import our 
160.739 4.681 session maker 
162.959 4.28 and then we want to say from SQL Alchemy 
165.42 4.92 dot EXT 
167.239 6.821 dot declarative 
170.34 5.58 import our declarative base all right 
174.06 6.179 now after this let's go ahead and just 
175.92 6.599 say URL underscore database and now this 
180.239 3.481 is going to be the string for sqlite 
182.519 3.781 database 
183.72 6.18 now if you want to use postgres database 
186.3 5.939 or a mySQL database or even a mongodb 
189.9 4.199 nosql database go ahead and check out 
192.239 3.121 one of these videos 
194.099 3.481 um but for the meantime for this 
195.36 4.92 application we are going to be using SQL 
197.58 4.799 Lite and to connect with sqlite database 
200.28 5.879 we're just going to say sqlite colon 
202.379 6.541 slash slash dot slash and here I'm just 
206.159 4.261 going to name this our finance DB all 
208.92 3.84 right and now let's go ahead and just 
210.42 5.7 say engine 
212.76 6.059 equals our create engine and inside here 
216.12 4.619 we need to pass in our URL database and 
218.819 4.56 then we want to say connect arguments 
220.739 6.0 and we need this done object and we're 
223.379 5.94 going to say check same thread as false 
226.739 4.86 we then need to create our session local 
229.319 3.78 which is going to be equal to our 
231.599 4.761 session maker 
233.099 7.92 where we pass in Auto commit 
236.36 6.879 is equal to False auto flush 
241.019 5.821 is equal to false 
243.239 5.701 and bind equals our engine that we just 
246.84 4.74 created and then lastly we want to say 
248.94 5.579 our base is equal to our declarative 
251.58 5.46 base all right so this is everything we 
254.519 6.0 need to connect our fast API application 
257.04 5.099 to our sqlite database now the next 
260.519 3.12 thing we want to do is hop into our 
262.139 4.681 models where now we're going to be 
263.639 6.421 creating our table for sqlite database 
266.82 6.42 so we want to say from database we need 
270.06 6.78 to import our base we want to say from 
273.24 5.6 SQL Alchemy we want to import column 
276.84 3.9 integer 
278.84 4.0 string 
280.74 4.32 Boolean 
282.84 4.32 and float 
285.06 3.54 so the column means in our database 
287.16 3.78 we're going to be creating columns for 
288.6 4.5 the tables and then the integer string 
290.94 4.199 Boolean and Float are the data types for 
293.1 3.539 each column 
295.139 3.661 so now we need to go ahead and create 
296.639 5.221 our model so we're going to call this 
298.8 5.52 model a class transaction 
301.86 4.559 where we inherit our base that we 
304.32 3.9 created from our database and we want to 
306.419 5.521 name the table so we can say underscore 
308.22 5.479 underscore table name equals and we're 
311.94 3.6 going to name this table 
313.699 3.28 transactions so the underscore 
315.54 3.9 underscore table name underscore 
316.979 4.5 underscore for SQL Alchemy it'll now 
319.44 4.8 create a table in the sqlite database 
321.479 5.761 called transactions and now we're about 
324.24 5.239 to create the columns and the data types 
327.24 5.34 for each record in the table 
329.479 6.22 transactions so here we want to create a 
332.58 4.679 new ID of column which is going to be an 
335.699 4.021 integer that's going to be the primary 
337.259 4.38 key so we can say primary key equals 
339.72 4.259 true and then we want this to be 
341.639 4.5 indexable which means it performs a 
343.979 5.041 little bit better in the database we 
346.139 6.78 want to create an amount which is going 
349.02 6.72 to be a column of float we want a 
352.919 4.141 category which is going to be equal to a 
355.74 5.88 column 
357.06 8.16 of string we want a description which is 
361.62 6.359 going to be equal to a column also of 
365.22 5.699 string is income so we'll be able to say 
367.979 5.761 like is this income coming in is this a 
370.919 7.261 true or false so we can say Boolean so 
373.74 6.299 we can say column of Boolean and then 
378.18 3.48 lastly we're going to say date but we're 
380.039 4.44 just going to have the date as a type of 
381.66 5.28 string so we can say date equals column 
384.479 4.741 of string week so so we can say date 
386.94 4.92 equals column of string so we don't have 
389.22 5.94 to deal with any kind of date formatting 
391.86 6.48 between our JavaScript react application 
395.16 5.34 our python fast API application and then 
398.34 4.68 our SQL database so all three of those 
400.5 4.919 could handle dates differently so we're 
403.02 4.56 just going to say it as a string so it's 
405.419 4.441 a smooth process and a smooth and a 
407.58 4.2 smooth flow from the front end all the 
409.86 3.899 way to the database all right so now 
411.78 4.38 that we got our models our database 
413.759 6.06 let's go ahead and just jump into our 
416.16 7.8 main.pi fast API application so let's go 
419.819 6.781 ahead and say from Fast API we want to 
423.96 7.56 import our fast API we want to import 
426.6 7.5 our HTTP exception and our depends we 
431.52 6.119 then want to say from typing let's 
434.1 4.999 import our annotated we want to say from 
437.639 5.221 SQL 
439.099 6.521 alchemy.orm we want to import our 
442.86 7.02 session from our database we want to say 
445.62 9.78 from pedantic for data validation import 
449.88 8.7 base model from our database import our 
455.4 6.6 session local and our database engine 
458.58 6.36 and then we want to say import models 
462.0 4.919 okay and now one more thing that we're 
464.94 5.64 going to run into is something called 
466.919 6.361 cores and cores is a way for our 
470.58 5.94 application to automatically defend 
473.28 4.8 against cross origin requests and that 
476.52 3.72 means something other than the 
478.08 5.519 application is calling the application 
480.24 5.34 and since our react application is going 
483.599 6.0 to be a completely different application 
485.58 8.16 than our fast API application we need to 
489.599 10.681 enable cores and we can enable course by 
493.74 9.359 saying from fastapi dot middleware dot 
500.28 5.46 cores import our cores middleware 
503.099 5.461 alright now as always we want to say app 
505.74 6.12 equals fast API 
508.56 5.219 and then we want to implement our cores 
511.86 4.02 Origins so 
513.779 6.301 our react application is going to be 
515.88 6.839 sitting on our local host of Port 3000 
520.08 5.22 so what we want to say is we want to 
522.719 4.501 create a new variable of Origins which 
525.3 4.2 is equal to a list because we can add 
527.22 4.619 more than one origin and we want to say 
529.5 4.68 that this origin is going to be HTTP 
531.839 5.881 colon slash 
534.18 6.12 localhost of Port 3000 so what this 
537.72 5.88 really means is a port or a different 
540.3 5.039 application is allowed to call our fast 
543.6 4.859 API application 
545.339 7.321 only if it is running on our local host 
548.459 6.781 on Port 3000 so then we can say app dot 
552.66 3.78 add middleware where we can pass in our 
555.24 5.719 cores 
556.44 6.48 middleware and we want to allow 
560.959 5.5 Origins 
562.92 4.919 that is equal to our Origins that we 
566.459 3.541 just created 
567.839 4.801 so we have our Origins list where we're 
570.0 5.1 only allowing one URL 
572.64 3.84 and then we're adding it to our 
575.1 4.2 application 
576.48 6.0 all right so now let's go ahead and 
579.3 5.34 let's create our pedantic and we can do 
582.48 4.2 this by saying class 
584.64 4.46 transaction base 
586.68 5.64 and we want to pass in our base model 
589.1 5.26 from pedantic where we're going to pass 
592.32 6.56 in our amount 
594.36 8.36 of type float or category of type string 
598.88 9.78 and we don't need this comma description 
602.72 9.64 of type string is income of type Boolean 
608.66 5.739 and date of type string so right here 
612.36 4.2 we're creating our pedantic model which 
614.399 5.761 is going to validate the requests from 
616.56 5.279 our react application and based on if 
620.16 3.92 the data is valid or not we'll either 
621.839 5.101 accept it into our fast API application 
624.08 5.98 or we'll reject the request from our 
626.94 4.92 react application let's also create one 
630.06 4.98 more which is going to be our 
631.86 6.06 transaction model which also takes in 
635.04 4.2 our TR which takes in our transaction 
637.92 4.14 base 
639.24 6.3 where our ID is going to be of type int 
642.06 5.66 and then our class config is going to be 
645.54 6.96 orm mode 
647.72 6.64 equals true all right perfect we now 
652.5 5.579 need to create our database dependency 
654.36 6.96 so we can say def get underscore DB 
658.079 6.721 where we say DB is equal to our session 
661.32 6.6 local we want to try 
664.8 6.539 and yield our DB 
667.92 7.26 and then always make sure that we close 
671.339 5.461 our DB at the end so right here we're 
675.18 3.48 saying get DB which is going to be our 
676.8 4.2 dependency injection for our application 
678.66 4.919 which says we're going to try and create 
681.0 4.079 a database connection and if we don't 
683.579 3.241 create a database connection well we're 
685.079 3.541 still going to close the database and if 
686.82 2.88 we do we're also going to close it so we 
688.62 3.3 always want to make sure that our 
689.7 4.56 connection string only opens up when a 
691.92 6.12 request comes in and then we close it 
694.26 8.54 when request is complete okay 
698.04 6.66 and now what we want to do is say DB 
702.8 3.88 dependency so we're going to create our 
704.7 5.819 dependency injection right here 
706.68 5.159 equals annotated where we pass in our 
710.519 3.541 session 
711.839 5.581 and then we say depends 
714.06 5.64 where we pass in our git DB 
717.42 8.099 we then want to say models 
719.7 8.16 dot base dot metadata dot create all 
725.519 5.281 where we pass in our bind that is equal 
727.86 5.64 to our engine so what we're saying here 
730.8 5.64 is we are creating our database and our 
733.5 5.94 database is going to create our table 
736.44 6.18 and our columns automatically when this 
739.44 4.44 fast API application is created all 
742.62 4.38 right so now let's go ahead and create 
743.88 5.54 our first endpoint for our transactions 
747.0 5.04 application we can do this by saying at 
749.42 6.58 app.post and inside here we want to say 
752.04 6.6 slash transaction slash transactions and 
756.0 5.1 we can verify it by saying our response 
758.64 7.28 model 
761.1 4.82 should be equal to our transaction model 
766.44 6.06 I'm going to make a space right there 
768.079 6.121 and let's go ahead and say async def 
772.5 4.8 create 
774.2 7.42 transaction where we pass in a 
777.3 7.74 transaction of type transaction base 
781.62 5.6 with our DB of DB dependency and then 
785.04 3.739 let's go ahead and say DB 
787.22 5.559 transaction 
788.779 7.541 equals a new transaction 
792.779 8.541 for more models so models.transaction 
796.32 9.3 and inside here we can say transaction 
801.32 6.22 dot dictionary and what this will do is 
805.62 2.94 based on everything in our transaction 
807.54 4.02 base 
808.56 6.42 we're going to map all of the variables 
811.56 5.76 from our transaction base to our table 
814.98 4.979 transaction to save into our sqlite 
817.32 6.18 database we then want to say DB dot add 
819.959 8.281 and add our DB transaction 
823.5 7.86 DB dot commit DB dot refresh so we can 
828.24 5.64 get this DB transaction back into us so 
831.36 6.3 we can now use the new one and we can 
833.88 4.98 return this DB transaction so with that 
837.66 3.479 let's go ahead and just run our 
838.86 4.32 application because now we have our 
841.139 5.101 sqlite installed our database connection 
843.18 6.48 installed and we now have a full 
846.24 5.58 functioning API endpoint 
849.66 4.859 now to run this application we need to 
851.82 6.48 jump into our fast API directory so 
854.519 6.301 let's first go into CD fast API and now 
858.3 5.64 let's go ahead and say uvicorn main 
860.82 4.74 colon app dash dash reload 
863.94 4.86 all right so here we can see our 
865.56 6.18 transaction API endpoint if we open this 
868.8 8.219 up we can try it out we can say amount 
871.74 9.32 of 100 the category is learning our 
877.019 8.401 description will be online course 
881.06 5.56 income will say false and we'll say a 
885.42 3.12 date in the future so we'll say like 
886.62 2.899 2030 
888.54 2.7 um 
889.519 5.041 1004. 
891.24 3.32 and then execute 
894.66 5.7 when we scroll down we can see that we 
896.82 5.879 get a response of 200 and we saved 
900.36 4.08 something to our database 
902.699 4.32 awesome stuff 
904.44 4.199 if we go back to our application we can 
907.019 6.601 see that there's a new 
908.639 8.82 file called finance.db and that is our 
913.62 5.94 sqlite database our sqlite database is a 
917.459 3.841 file structure database that sits within 
919.56 5.04 the application so it's not external 
921.3 5.279 like postgres or MySQL 
924.6 4.739 it sits within the application so right 
926.579 4.981 here this is our database 
929.339 4.021 so to show you that we can retrieve data 
931.56 5.76 from the database let's go ahead and 
933.36 7.32 just create a new git API endpoint we 
937.32 6.98 can do this by saying at app dot get 
940.68 6.42 and inside here let's call this 
944.3 5.32 transactions as well where we want this 
947.1 5.16 response model to be a list of 
949.62 5.04 transaction models 
952.26 4.5 and up here in the top we need to make 
954.66 5.52 sure that we import list 
956.76 5.34 so we can say annotated in list and now 
960.18 4.44 that will remove the error that we were 
962.1 5.64 getting right here with list and now 
964.62 6.06 let's go ahead and just say async def we 
967.74 6.06 want to read our transactions we're 
970.68 6.24 going to pass in our DB of DB dependency 
973.8 5.88 we're going to pass in our skip of 
976.92 6.659 integer equals zero and then we're going 
979.68 7.38 to pass in limit of type int which is 
983.579 6.0 equal to 100. so here we're adding some 
987.06 5.339 query parameters that will allow us to 
989.579 5.221 be able to fetch a certain amount of 
992.399 4.56 transactions for our application all 
994.8 7.2 right so so far we are doing awesome 
996.959 5.041 let's go ahead and now say transactions 
1003.82 6.639 equals DB dot query where we pass in a 
1009.139 4.161 transaction 
1010.459 6.901 from our models 
1013.3 8.02 dot offset and here we're going to pass 
1017.36 6.9 in our skip dot limit and here we're 
1021.32 5.4 going to pass in our limit dot all and 
1024.26 4.02 then let's go ahead and just return the 
1026.72 3.92 transactions 
1028.28 5.34 so now if we go back to our application 
1030.64 4.9 and we refresh we can see that we're 
1033.62 4.86 going to have another API endpoint 
1035.54 5.22 called transactions or we can try it out 
1038.48 4.38 and we'll just pass in zero and we'll 
1040.76 3.78 say 100 is the limit for this API 
1042.86 4.559 request 
1044.54 6.0 and when we click execute we can now see 
1047.419 5.701 a list of all of our expenses 
1050.54 4.44 which we only have one so far so just 
1053.12 5.28 moving right along we have created our 
1054.98 6.18 fast API application which now shows 
1058.4 5.519 everything from our database 
1061.16 5.58 well now let's go ahead and jump into 
1063.919 5.161 our react application 
1066.74 4.08 for react application we want to use a 
1069.08 4.26 different terminal so let's go ahead and 
1070.82 3.66 say new terminal and the reason being is 
1073.34 3.9 it's going to be sitting on a different 
1074.48 5.16 port so we want one terminal to handle 
1077.24 3.299 our fast API application that is going 
1079.64 2.46 to be running 
1080.539 4.621 and now on the other terminal we're 
1082.1 5.04 going to be using our react 
1085.16 4.08 so let's go ahead and just CD and do our 
1087.14 5.039 react directory 
1089.24 6.059 and now to be able to use react we need 
1092.179 4.86 to go ahead and install node.js so if 
1095.299 3.081 you've never used node.js before you 
1097.039 5.461 need to go to 
1098.38 6.7 nodejs.org en and download your 
1102.5 6.24 respective node.js 
1105.08 5.459 version and I'm using this one right now 
1108.74 3.9 which is recommended for most users but 
1110.539 5.341 make sure you download node.js because 
1112.64 6.3 react will rely on it 
1115.88 5.28 now once you download node.js we'll be 
1118.94 6.239 able to say MPX 
1121.16 6.72 create react app and we'll name this our 
1125.179 5.101 finance app 
1127.88 4.74 and now click enter 
1130.28 5.46 this will create a new app in our 
1132.62 6.12 directory called finance app and this is 
1135.74 6.0 a react application and you need node.js 
1138.74 4.92 because npx is part of the node.js and 
1141.74 3.6 it's now downloading all the 
1143.66 4.56 dependencies we need for a react 
1145.34 4.8 application automagically right in our 
1148.22 4.079 directory and then from here we can 
1150.14 4.32 customize it now to fit our application 
1152.299 5.041 needs alright so the next thing we need 
1154.46 4.219 to do is get bootstrap 5 in our 
1157.34 4.86 application 
1158.679 6.581 bootstrap is a popular CSS and 
1162.2 5.52 JavaScript library slash framework that 
1165.26 5.159 comes with a lot of JavaScript and CSS 
1167.72 4.319 automatically so it'll save us so much 
1170.419 4.681 time in making our application look 
1172.039 4.741 elegant and modern in everything so so 
1175.1 4.26 the very first thing we want to do is 
1176.78 4.56 right here it's going to give us a CSS 
1179.36 4.559 some JavaScript links that we need to 
1181.34 6.06 add in our application and it'll give us 
1183.919 6.061 a starting template now right here where 
1187.4 6.18 it says bootstrap CSS we want to make 
1189.98 5.819 sure we copy this entire line now 
1193.58 5.7 now make sure you copy the entire entire 
1195.799 5.941 line this line is long so let's go ahead 
1199.28 6.3 and copy this 
1201.74 6.78 let's go back to our Visual Studio 
1205.58 6.66 and inside our react application let's 
1208.52 3.72 go to public index.html 
1213.08 7.2 now this is kind of like the entire 
1216.799 6.0 beginning header and body and ending of 
1220.28 5.639 a react application 
1222.799 6.601 so right under this meta and before this 
1225.919 6.601 first link let's go ahead and just paste 
1229.4 5.58 in that CSS bootstrap that we just 
1232.52 5.399 grabbed from the website now let's go 
1234.98 5.579 back and this option one bootstrap 
1237.919 5.88 bundle with popper let's go ahead and 
1240.559 4.86 grab this entire thing as well 
1243.799 3.841 and now let's go back to our visual 
1245.419 4.62 studio now let's scroll all the way down 
1247.64 5.159 to where you see body 
1250.039 5.88 and right before this second body which 
1252.799 6.081 is a carrot slash body slash 
1255.919 6.961 let's go ahead and paste that bootstrap 
1258.88 8.38 bundle with poperlink now this is all we 
1262.88 6.84 need to set up bootstrap 5 CSS and 
1267.26 4.5 JavaScript within our application so 
1269.72 4.199 we'll be able to add some animations and 
1271.76 4.919 JavaScript and CSS all super easy 
1273.919 4.681 there'll be so much to find CSS already 
1276.679 3.481 which will just save us so much time 
1278.6 3.9 with implementation 
1280.16 5.879 now I'm not going to dive too much into 
1282.5 6.539 everything react but let's go ahead and 
1286.039 5.161 just open up our source directory now 
1289.039 5.401 our source directory is where all of our 
1291.2 5.94 CSS and now the source directory is 
1294.44 6.0 where all of our code is going to go 
1297.14 6.06 so if we open up our app.js we can see 
1300.44 6.359 that there's already some code here and 
1303.2 4.8 now app.js is our main react file that 
1306.799 2.941 we're going to be working in this 
1308.0 4.559 project 
1309.74 4.319 so we can see that when you install a 
1312.559 4.74 react application 
1314.059 6.541 there's already some react that comes 
1317.299 5.76 automatically pre-built with the app 
1320.6 6.3 so if we go back to our terminal 
1323.059 6.301 and right here we say npm start which is 
1326.9 4.019 our node package manager and then we 
1329.36 4.799 call the start 
1330.919 5.581 and that's coming from our package Json 
1334.159 4.14 where we can see that there are some 
1336.5 3.78 scripts inside 
1338.299 4.081 and that we are able to call these 
1340.28 4.139 scripts by saying MPN and then it's 
1342.38 4.679 calling the start functionality which 
1344.419 5.161 kicks off a react script start and it's 
1347.059 4.441 kind of like a which is kind of like a 
1349.58 5.76 flow of getting the application started 
1351.5 4.919 so if we click this and we're getting an 
1355.34 2.76 error because I actually have to jump in 
1356.419 4.38 one level deeper so it's inside our 
1358.1 5.04 finance app so let's go CD into our 
1360.799 3.841 finance app from a react from our react 
1363.14 3.3 directory so there's a react directory 
1364.64 5.46 and then our finance app directory in 
1366.44 6.84 dimness so we can now say npm start here 
1370.1 6.36 and boom we can see that just like that 
1373.28 4.5 we now have our react application 
1376.46 3.959 running 
1377.78 5.94 and it's running on our Port 3000 our 
1380.419 5.721 fast API runs on Port 8000 
1383.72 5.339 and this 
1386.14 4.6 127.0.0.1 is your Local Host so I can 
1389.059 4.141 actually change that to localhost and 
1390.74 4.799 it's going to show the exact same thing 
1393.2 5.219 so our react application is running on 
1395.539 5.161 Port 3000 of our local machine and our 
1398.419 4.38 fast API application is running on Port 
1400.7 4.26 8000. 
1402.799 4.561 now this spinning logo in this 
1404.96 6.12 editsource app.js to save and reload 
1407.36 4.92 learn react all comes automatically from 
1411.08 4.38 react 
1412.28 6.72 and that is the exact same thing as 
1415.46 6.48 inside our source directory our app.js 
1419.0 5.7 file so to show that if we delete 
1421.94 5.04 everything but this div I'm also going 
1424.7 4.979 to delete this class name so we just 
1426.98 4.199 have all of this code and then we have 
1429.679 5.461 this div 
1431.179 5.88 and we say an H1 tag 
1435.14 6.6 by doing 
1437.059 7.201 brat doing carrot H1 our end carrot 
1441.74 4.439 Visual Studio will automatically create 
1444.26 4.62 the ending carrot 
1446.179 5.341 and here if we just say hello 
1448.88 5.34 and we save it's going to automatically 
1451.52 3.84 recompile so now if we go back to our 
1454.22 3.9 Chrome 
1455.36 6.059 we can see Hollow in the top left hand 
1458.12 6.299 corner pretty cool so the next thing we 
1461.419 6.301 need to do here is now create a react 
1464.419 5.88 piece of code that'll send API endpoints 
1467.72 6.0 and be able to communicate with our fast 
1470.299 6.781 API application now like I said this is 
1473.72 5.22 not like a super introductory to react 
1477.08 4.68 because we are going to be calling API 
1478.94 5.28 endpoints to our fast API application 
1481.76 5.22 but what we can do here is I'm going to 
1484.22 5.339 delete everything right here where it 
1486.98 4.92 talks about function app and what I'm 
1489.559 6.301 going to say first is right here where 
1491.9 7.08 it says import logo and importer app.css 
1495.86 5.34 I am going to remove all of this so all 
1498.98 5.4 that we see right here is our export 
1501.2 6.3 default app I am also inside our source 
1504.38 7.44 directory gonna right click new file and 
1507.5 8.58 here I'm going to say API dot Js 
1511.82 7.8 now inside our api.js we need to go 
1516.08 5.339 ahead and add our connection to our fast 
1519.62 4.62 API application 
1521.419 5.521 but before that we need to First 
1524.24 5.939 download a new dependency 
1526.94 5.94 so we can say MP at npm so node package 
1530.179 6.421 manager install 
1532.88 5.94 axios now axios is a popular API 
1536.6 4.74 connection Library so we can connect our 
1538.82 5.16 react application to our fast API 
1541.34 5.339 application so now that we installed 
1543.98 7.64 that we can close out of this terminal 
1546.679 4.941 for right now and we can say import 
1552.86 4.58 axios 
1554.659 2.781 from 
1558.02 6.12 axios 
1560.0 5.539 we then want to say const API equals 
1564.14 4.58 axios 
1565.539 3.181 dot create 
1569.36 5.66 and now inside here we want to say base 
1572.299 6.74 URL colon 
1575.02 8.5 HTTP colon slash 
1579.039 8.081 localhost Port 8000 and then we want to 
1583.52 6.6 say export default 
1587.12 5.28 API so what we're saying right here is 
1590.12 5.039 we know our fast API application is 
1592.4 5.7 going to be at our Port of 8 000 so 
1595.159 6.181 we're creating a base URL of HTTP colon 
1598.1 6.3 slash logo host Port 8000 
1601.34 6.18 so now on our app.js we can call our 
1604.4 5.58 fast API application pretty easily using 
1607.52 4.68 a static string of Base URLs so we don't 
1609.98 4.14 have to recreate this every time or use 
1612.2 4.26 these axios creates it'll automatically 
1614.12 4.86 do all of that for us so all we have to 
1616.46 5.88 focus on is calling the right API for 
1618.98 5.88 fast API application alright so now from 
1622.34 5.219 here we can say import react 
1624.86 6.48 and then we want to say comma brackets 
1627.559 6.541 where we say you state 
1631.34 4.8 use effect 
1634.1 4.819 from 
1636.14 2.779 react 
1639.08 5.579 and react and import react that comes 
1641.659 5.221 with a lot of just global dependencies 
1644.659 5.0 and then use date and use effect are 
1646.88 5.34 hook hooks they're called react Hooks 
1649.659 4.781 and they're used for us to call these 
1652.22 5.16 API endpoints all right and now we can 
1654.44 5.0 say import API 
1657.38 6.539 from 
1659.44 6.28 slash dot slash API 
1663.919 3.12 and you might be wondering why is this a 
1665.72 2.76 double quote and why is this a single 
1667.039 3.421 quote well that's just personal 
1668.48 4.439 preference so we can actually make this 
1670.46 5.52 a single quote as well all right now 
1672.919 5.821 let's go ahead and create our app.js our 
1675.98 4.559 react application for our fast API 
1678.74 4.14 application 
1680.539 7.201 so what we can do here is we can say 
1682.88 7.38 const app equals parentheses 
1687.74 4.62 Arrow function brackets or we can say 
1690.26 3.659 const 
1692.36 2.64 and we're going to create pieces of 
1693.919 4.74 State here 
1695.0 3.659 where we say transactions 
1699.799 4.74 set transactions 
1701.84 5.939 equals use state or we're going to say 
1704.539 7.62 brackets with a list inside and then 
1707.779 9.061 const brackets form data comma 
1712.159 7.561 set form data equals use state where 
1716.84 5.88 inside here we want to say parentheses 
1719.72 3.0 brackets 
1722.84 6.48 and we want to say amount 
1725.419 6.901 is going to be equal to an empty string 
1729.32 3.0 category 
1734.059 4.081 is going to be empty is going to be 
1735.86 5.22 equal to an empty string 
1738.14 5.1 description 
1741.08 4.92 is going to be equal to an empty string 
1743.24 6.36 is income 
1746.0 6.48 is going to start off as false 
1749.6 4.5 and date is going to be just an empty 
1752.48 4.62 string because remember we're using a 
1754.1 4.92 string for date not anything else all 
1757.1 3.48 right now the next thing we want to say 
1759.02 4.2 is we want to create some functions 
1760.58 5.959 within our app.js file 
1763.22 7.26 so we can say const fetch 
1766.539 6.941 transactions which is equal to async 
1770.48 4.919 parentheses Arrow function 
1773.48 4.02 brackets 
1775.399 4.741 and now inside here we can say our 
1777.5 5.88 response 
1780.14 5.94 is going to be equal to a weight 
1783.38 4.799 and then API which is our API that comes 
1786.08 4.38 with all of our axio stuff 
1788.179 5.281 dot get 
1790.46 4.38 where we can pass in our transactions 
1793.46 3.06 endpoint 
1794.84 4.14 where I'm going to say slash 
1796.52 4.019 transactions slash and then we want to 
1798.98 6.6 set it to our piece of state so set 
1800.539 8.041 transactions to our response dot data 
1805.58 4.319 we then want to have a use effect 
1808.58 3.54 which 
1809.899 4.02 is going to have a parenthesis and then 
1812.12 3.659 a set of parentheses inside with an 
1813.919 6.321 arrow function brackets 
1815.779 4.461 which is our fetch transactions 
1820.34 5.579 with nothing at the end to re-kick off a 
1824.6 3.78 new 
1825.919 5.041 um use effect hook so we're using two 
1828.38 5.34 hooks here we're using 
1830.96 4.5 um our U State and our use effect use 
1833.72 4.98 state allows us to keep state within 
1835.46 5.459 react so we know when state champ when 
1838.7 4.62 State changes so we know when to shift 
1840.919 3.841 and change pieces of data and then our 
1843.32 4.32 use effect which means when this 
1844.76 4.98 component loads which is our app.js we 
1847.64 4.139 are going to fetch our fetch 
1849.74 4.2 transactions which gets all of our 
1851.779 5.52 transactions from our fast API 
1853.94 6.0 application all right now let's go ahead 
1857.299 6.181 and now create our handle input change 
1859.94 7.08 so we want to say const handle input 
1863.48 5.16 change which equals a new event on the 
1867.02 4.68 screen 
1868.64 6.36 with an arrow function brackets where we 
1871.7 6.979 can say our value so const value is 
1875.0 8.039 going to be equal to an event dot Target 
1878.679 12.1 DOT type three equal signs dot checkbox 
1883.039 7.74 question mark event dot Target Dot 
1892.34 5.699 checked 
1893.919 7.26 event dot Target 
1898.039 3.14 dot value 
1901.64 3.48 so we're creating a new function of cons 
1903.44 3.9 to handle input change where we're 
1905.12 4.439 expecting an inute where we're expecting 
1907.34 4.8 an event and then we're creating a new 
1909.559 4.86 variable based on the event of a check 
1912.14 4.74 box getting clicked or not and the check 
1914.419 5.461 box is going to be the Boolean for our 
1916.88 4.38 is income for our form that we're going 
1919.88 5.94 to be working on here in a little bit 
1921.26 7.799 and then we can just say set form data 
1925.82 4.979 to a set of parentheses with a bracket 
1929.059 6.24 inside 
1930.799 6.36 or we can use dot dot dot form data all 
1935.299 5.901 right and then once we get this form 
1937.159 7.861 data let's go ahead and just say event 
1941.2 5.979 dot Target dot name 
1945.02 5.039 colon value 
1947.179 6.901 and let's add semicolons at the end of 
1950.059 7.261 line 28 and 29 all right and now let's 
1954.08 5.4 go ahead and create one more handle form 
1957.32 5.52 submit and this is going to be the way 
1959.48 6.439 that we can submit a form and we can 
1962.84 8.939 create this function by saying const 
1965.919 8.5 handle form submit equals async where we 
1971.779 5.701 can pass in the event 
1974.419 5.821 Arrow function brackets 
1977.48 5.76 and here we want to say event dot 
1980.24 6.059 prevent default 
1983.24 6.36 and what this will do is when we submit 
1986.299 4.74 a form the normal event is to submit the 
1989.6 3.299 form we're going to say we don't want 
1991.039 3.181 that to do we do not want that to happen 
1992.899 2.701 so we're going to prevent it from 
1994.22 3.54 defaulting to submitting the form 
1995.6 4.02 because we want to handle the action of 
1997.76 4.799 submitting the form 
1999.62 6.36 so here we want to say await.api which 
2002.559 5.6 is our fast API URL where we're going to 
2005.98 6.36 create a post call 
2008.159 7.421 to our transactions 
2012.34 5.339 comma form data 
2015.58 5.459 we then want to fetch our transactions 
2017.679 6.0 so if we add a new transaction we want 
2021.039 4.98 to refetch all the transactions so when 
2023.679 4.62 we show a table of all the transactions 
2026.019 4.081 we can see all of them there so every 
2028.299 4.26 time we submit a new transaction we're 
2030.1 4.679 going to recall all the transactions 
2032.559 4.561 from the database so the application is 
2034.779 4.801 always up to date on the front and side 
2037.12 3.899 so we want to then fetch all of the 
2039.58 4.5 transactions 
2041.019 5.701 and then we want to set the form data so 
2044.08 5.16 kind of like we did up here we can grab 
2046.72 7.439 all of this because that's setting the 
2049.24 7.08 state we want to then say set form data 
2054.159 3.921 to 
2056.32 5.279 all of this 
2058.08 5.2 and then close out of these so these are 
2061.599 3.601 the pieces of state so we're going to 
2063.28 4.8 have a form where we can type in the 
2065.2 5.639 transaction the transaction date and 
2068.08 4.44 once a user fills all those form Fields 
2070.839 2.82 up those input forms and they click 
2072.52 3.839 submit 
2073.659 4.74 well all of those will still stay with 
2076.359 4.681 data so if you type in 100 and you click 
2078.399 4.141 submit it'll still say 100 and that's 
2081.04 3.72 because we're preventing the default 
2082.54 4.799 action of removing all of that because 
2084.76 7.5 we're overriding the form submission 
2087.339 6.901 with our Fetch and submit apis 
2092.26 3.839 well what we need to do then because 
2094.24 4.26 they're pieces of State on the react 
2096.099 5.161 application we need to set the amount 
2098.5 6.06 category description is data and default 
2101.26 6.18 is income and date back to the original 
2104.56 4.86 pieces of state which is just empty 
2107.44 6.179 strings all right so now let's start 
2109.42 6.3 writing some actual HTML code to show 
2113.619 4.561 our application is 
2115.72 4.98 um doing something right so the first 
2118.18 5.36 thing that we have to do is create a 
2120.7 7.34 return statement so we can say return 
2123.54 8.559 parentheses now one thing to note is 
2128.04 6.16 react can only return one element so for 
2132.099 4.141 example for outside this div and we say 
2134.2 3.72 we want to return to H1 well we're going 
2136.24 4.32 to get an error because it can only 
2137.92 4.8 return one thing that we need as the 
2140.56 4.2 parent and that's okay we'll just use a 
2142.72 3.359 div as the parent 
2144.76 3.96 well the very first thing we're going to 
2146.079 5.52 do is create a nav bar so let's go ahead 
2148.72 6.619 and just say carrot nav and inside here 
2151.599 5.421 we're going to say class name equals 
2155.339 6.581 navbar 
2157.02 6.579 navbar Dash dark and then b g 
2161.92 4.57 primary 
2163.599 4.861 inside here let's create another div 
2166.49 4.43 [Music] 
2168.46 5.94 where this class name 
2170.92 8.699 is going to be equal to container Dash 
2174.4 6.959 fluid and vcss now this CSS is all from 
2179.619 3.841 bootstrap so if you have any questions 
2181.359 3.421 about what this is doing feel free to 
2183.46 4.32 look it up on bootstrap this is 
2184.78 7.16 bootstrap 5 and in react these are 
2187.78 4.16 called class names not just class 
2191.98 4.56 all right and then inside here we are 
2193.839 5.161 going to create an a tag where this has 
2196.54 6.6 a class name that is going to be equal 
2199.0 6.48 to our nav bar Dash brand 
2203.14 4.56 we want an href 
2205.48 4.02 that really is not doing anything so 
2207.7 3.18 we'll just have it set to a default 
2209.5 4.2 pound 
2210.88 5.82 and then outside of this we want this to 
2213.7 6.899 say our finance app all right let's open 
2216.7 5.94 this up and let's type in npm start this 
2220.599 3.601 will actually fetch our API endpoints 
2222.64 4.5 and stuff but we're not currently using 
2224.2 6.24 that anywhere so let's just open up our 
2227.14 6.0 browser okay so we're getting an error 
2230.44 5.34 if we right click and we just go over 
2233.14 3.959 and we re-click this and we go to 
2235.78 4.02 console 
2237.099 6.361 we'll be able to see what's going on so 
2239.8 7.08 we're getting an HTTP error from a bad 
2243.46 6.84 request to our fast API application so 
2246.88 7.44 it's saying localhost colon 8000 slash 
2250.3 6.779 transaction is not allowed so let's go 
2254.32 5.4 back to our API and see what could be 
2257.079 6.121 the issue here 
2259.72 6.54 well it looks like this is only a slash 
2263.2 5.82 so if we go back into our fast API 
2266.26 5.94 application 
2269.02 5.339 and we look at our main dot file and our 
2272.2 5.1 main.pi file we can see that we have our 
2274.359 5.101 slash transactions as just one slash no 
2277.3 5.22 slash at the end let's just add another 
2279.46 7.56 slash here at the end just so it matches 
2282.52 6.0 perfectly with our API endpoint that our 
2287.02 3.72 request is calling on a react 
2288.52 4.98 application 
2290.74 4.5 so now if we go back to our Google 
2293.5 2.94 Chrome now if we go back to our browser 
2295.24 4.26 and go back to our react app and we 
2296.44 5.22 refresh we can see that we just fixed 
2299.5 4.92 the API endpoint error 
2301.66 5.34 and we now have a beautiful nav bar at 
2304.42 4.74 the top of our screen where we can 
2307.0 5.7 shrink it and make it bigger and it says 
2309.16 5.52 finance app all using react okay and now 
2312.7 3.78 let's go back into our Visual Studio 
2314.68 4.14 let's get out of our fast API 
2316.48 6.0 application 
2318.82 6.08 and let's go back to our code here for 
2322.48 2.42 react 
2325.0 7.26 so let's jump out of this nav so this is 
2329.38 8.0 going to be our nav right here 
2332.26 5.12 let's now go ahead and say 
2337.66 7.26 div and this div is going to have a 
2340.839 7.791 class name that is equal to container 
2344.92 5.52 inside this div we want to create a form 
2348.63 7.75 [Music] 
2350.44 8.58 where this form has an on submit 
2356.38 4.979 event call 
2359.02 7.079 that is going to be equal 
2361.359 7.381 to our handle form submit function 
2366.099 4.861 and now inside this form we want to 
2368.74 4.8 create another div 
2370.96 3.84 where this div is going to have a class 
2373.54 2.96 name 
2374.8 5.46 that is equal to 
2376.5 5.079 mb-3 and mt-3 which means margin bottom 
2380.26 3.06 three and margin top three so we're 
2381.579 4.081 going to make some space between the nav 
2383.32 5.88 bar and the beginning of our form we 
2385.66 9.72 then want to have a label 
2389.2 9.48 and our label is going to have a html4 
2395.38 6.92 and we're going to say for amount 
2398.68 7.74 our class name is going to have a form 
2402.3 8.38 colon or Dash label and we are going to 
2406.42 7.32 say this is for amount 
2410.68 6.419 so if we save this and we go back into 
2413.74 5.82 our arouser we can see that we now have 
2417.099 4.801 a label of amount which has a margin 
2419.56 4.26 from the top of the nav bar and now we 
2421.9 3.48 need to have an input inside the same 
2423.82 3.6 diff and this is where a user will be 
2425.38 6.12 able to type in something so we can say 
2427.42 7.74 input and here we actually just want it 
2431.5 4.92 to be just a open carrot input and then 
2435.16 5.699 on the same line we're going to say 
2436.42 5.76 slash carob or we can say type equals 
2440.859 3.321 Tex 
2442.18 4.62 because we want a user to type in text 
2444.18 6.399 class name 
2446.8 6.9 is going to be equal to form control ID 
2450.579 6.241 is going to be equal to amount 
2453.7 6.419 name is going to be equal to amount we 
2456.82 6.539 can say on change is going to be equal 
2460.119 6.661 to our handle input change and then 
2463.359 5.72 value will equal 
2466.78 6.54 our form 
2469.079 7.241 data dot amount 
2473.32 5.7 all right so if we save this now and we 
2476.32 5.16 go back to our browser we can see that 
2479.02 6.0 there is now a input field under our 
2481.48 4.92 amount where a user can type stuff in 
2485.02 5.04 all right 
2486.4 5.58 now for this now for this div let's go 
2490.06 4.38 ahead and just copy this a few more 
2491.98 5.52 times so I'm going to make some spaces 
2494.44 4.98 just so it's easier to see but I'm going 
2497.5 3.9 to do another div here where we're going 
2499.42 4.439 to remove this margin top so it's only 
2501.4 5.16 going to be margin bottom because the 
2503.859 4.621 margin bottom of this will push the next 
2506.56 4.92 input down 
2508.48 4.2 and this will be for category not for 
2511.48 3.42 amount 
2512.68 5.58 it's going to be a form label 
2514.9 5.88 we want this to now say category 
2518.26 4.44 we wanted to be of type text we want to 
2520.78 7.559 be a form control this is going to be 
2522.7 10.32 for category the name is category 
2528.339 6.541 and form data dot category we now want 
2533.02 4.319 to do the exact same thing for our 
2534.88 6.979 description 
2537.339 4.52 we can say for description 
2542.46 6.34 description 
2544.3 6.779 we want to be text for description 
2548.8 3.84 I'm just going to copy and paste this 
2551.079 4.321 whoa 
2552.64 5.58 I'm gonna copy and paste this in here 
2555.4 7.32 and it's going to be for our form data 
2558.22 7.56 of description let's now do it for our 
2562.72 8.899 check box so we can say div class name 
2565.78 10.44 of mb3 this is going to have a label for 
2571.619 7.361 is income with a form Ladle label where 
2576.22 5.34 we'll say income question mark 
2578.98 7.44 and now our input for this is going to 
2581.56 7.799 be of type check box class name is going 
2586.42 7.14 to be form control we do not need a 
2589.359 10.46 class name for our check box our ID is 
2593.56 6.259 going to be is income our name 
2599.92 5.1 our name is going to be is income we 
2603.16 5.4 want our on change to be the handle 
2605.02 6.96 input change or form data is going to be 
2608.56 5.88 dot is income and then lastly let's do 
2611.98 5.639 it one more time and this will be for 
2614.44 5.1 our date so we'll do it just as it was 
2617.619 5.041 for the other strings whether it's going 
2619.54 5.64 to be date this will be date 
2622.66 6.12 um type text form control ID is date 
2625.18 6.78 description name is date and then form 
2628.78 5.7 data is date all right and then right 
2631.96 4.26 before the end of our form we want to 
2634.48 5.04 create a button 
2636.22 8.04 so we can say carrot button where type 
2639.52 9.54 is equal to submit and our class name is 
2644.26 6.78 going to be button button Dash primary 
2649.06 4.799 and we'll just name this button submit 
2651.04 5.52 so now if we go back to our browser 
2653.859 4.861 we're gonna see that there is an entire 
2656.56 6.14 form and we'll be able to type into it 
2658.72 5.54 so we can say 50 category is react 
2662.7 5.379 description 
2664.26 5.859 learning react we'll say it's false and 
2668.079 5.341 we'll also say it's in the future so 
2670.119 3.301 we'll say 2030-07-09 
2674.98 5.22 when we click submit we will get an 
2677.8 4.559 error for right now and if we look at 
2680.2 7.139 our console we can see that it's having 
2682.359 6.841 an issue calling our localhost 8000 due 
2687.339 4.441 to course 
2689.2 4.619 hmm well if we remember we thought we 
2691.78 5.46 did cores earlier 
2693.819 6.361 if we go into here and we look up our 
2697.24 6.359 fast API application and we look into 
2700.18 6.96 our main we can see that we do have HTTP 
2703.599 4.861 colon slash 3000 allowed 
2707.14 2.82 so I'm going to add I'm going to change 
2708.46 3.42 those single quotes to double quotes and 
2709.96 5.04 then I'm going to add a comma all right 
2711.88 5.9 so right here in our cores middleware 
2715.0 6.359 we also need to go ahead and add 
2717.78 5.5 allow underscore credentials 
2721.359 4.861 which we're going to make equal to true 
2723.28 6.299 we are going to say allow underscore 
2726.22 5.46 methods which is going to be equal to an 
2729.579 3.721 array of strings which we're going to 
2731.68 5.04 say star so that'll accept everything 
2733.3 5.279 and then we want to say allow underscore 
2736.72 4.619 headers 
2738.579 6.24 which is going to be equal to an array 
2741.339 5.48 of also Stars 
2744.819 6.561 allow methods 
2746.819 9.881 equals a string of stars 
2751.38 7.42 and allow underscore headers 
2756.7 5.159 equals a list 
2758.8 4.68 of stars 
2761.859 4.5 all right so now if we go back to our 
2763.48 4.98 browser and we refresh our screen let's 
2766.359 5.76 see if it gets submitted so we can say 
2768.46 7.379 amount is equal to one thousand category 
2772.119 7.081 is react description is react learning 
2775.839 4.681 and for the date we'll say it's in the 
2779.2 5.639 future 
2780.52 7.2 of 2030 April 5th if we click submit 
2784.839 4.921 it just goes away and all the fields are 
2787.72 4.56 empty and our submission worked if we go 
2789.76 4.98 back to our code we can see that we had 
2792.28 5.339 a successful post request and a 
2794.74 6.119 successful get request from our fast API 
2797.619 5.581 application so it is working we just are 
2800.859 5.941 not currently showing any of the 
2803.2 7.139 transactions so let's hop back into our 
2806.8 5.64 app.js and let's write the last bit of 
2810.339 4.441 code we need to show all of the 
2812.44 5.22 transactions for this application 
2814.78 5.16 so right under this form let's go ahead 
2817.66 6.179 and create a table 
2819.94 6.6 now this table is going to show us all 
2823.839 7.621 of our transactions that we've built so 
2826.54 9.18 far so let's get a table class name 
2831.46 7.26 is going to be equal to table 
2835.72 3.0 striped 
2839.2 8.399 table Dash bordered 
2842.56 5.039 and table slash hover 
2847.72 6.06 let's create a t head and inside here 
2850.839 5.041 let's create a table row and now we're 
2853.78 6.36 going to create a couple table headers 
2855.88 8.66 where this is going to say amount 
2860.14 4.4 this is going to say category 
2865.119 4.2 this is going to say description 
2870.4 5.959 this one's going to say 
2872.4 3.959 income question mark 
2876.819 5.341 and this one's going to say date and 
2879.7 5.58 let's remove this random slash up here 
2882.16 5.699 oops there we go all right and now right 
2885.28 5.52 under our table header let's create a 
2887.859 4.98 table body where we're just going to 
2890.8 3.36 show all of our transactions so we're 
2892.839 2.581 already fetching all of them from Fast 
2894.16 4.12 API 
2895.42 4.52 we can now say brackets 
2898.28 4.88 [Music] 
2899.94 4.72 transactions dot map where we can say 
2903.16 4.02 parentheses with another set of 
2904.66 5.159 parentheses inside where we can say 
2907.18 4.38 transaction 
2909.819 4.681 Arrow function 
2911.56 6.18 more parentheses open that up and inside 
2914.5 6.839 here let's create a new table row for 
2917.74 7.14 each transaction so we can say right 
2921.339 7.801 here we want this key to equal a 
2924.88 7.439 transaction dot ID and what a key means 
2929.14 5.52 in react is its reacts way of knowing 
2932.319 4.381 that this this transaction is different 
2934.66 4.98 than any other transaction so a lot of 
2936.7 5.1 times you'll use a transaction ID as the 
2939.64 4.979 key okay and now let's go ahead and just 
2941.8 6.96 create a couple table data and that's 
2944.619 8.24 each piece of data inside the table row 
2948.76 4.099 where we can say transaction amount 
2953.619 4.561 and I'm going to copy this for each item 
2956.619 4.2 so there's five items so I'm just going 
2958.18 5.159 to copy this five times 
2960.819 5.961 where it's dot amount 
2963.339 3.441 dot category 
2966.96 6.58 dot description 
2970.0 6.72 dot is income 
2973.54 5.1 and lastly dot is 
2976.72 4.619 date 
2978.64 4.86 now the only difference is we don't want 
2981.339 6.0 to say true or false we want to say yes 
2983.5 5.88 or no so since is income is a Boolean we 
2987.339 4.581 can literally 
2989.38 2.54 say 
2992.04 5.86 space question mark 
2995.5 6.54 yes 
2997.9 6.06 or no so this is a Boolean way of 
3002.04 5.039 printing two different types of strings 
3003.96 7.52 so if is income is true we'll print yes 
3007.079 4.401 instead and if it's false we will say no 
3011.52 4.74 all right so let's go ahead and save our 
3014.28 3.66 application and let's go back to our 
3016.26 4.2 browser 
3017.94 5.58 and right here we can see both of our 
3020.46 6.3 transactions we can see amount category 
3023.52 6.78 description income and date if we pass 
3026.76 7.38 in a new item so category 
3030.3 6.18 um we'll say a puzzle for our brain I 
3034.14 8.16 don't know it's part of our income and 
3036.48 9.3 we'll say 20 90 0 4 23 we click submit 
3042.3 5.279 this is saved in our fast API database 
3045.78 4.14 so what we did was we called our fast 
3047.579 5.221 API database with this information for a 
3049.92 5.28 post request and then we refetched all 
3052.8 5.059 of the information from our fast API 
3055.2 2.659 application 
3058.04 4.84 all right so if you enjoyed this course 
3061.14 3.419 all right so if you enjoyed this please 
3062.88 4.58 like and comment below and I'll see you 
3064.559 2.901 in the next video 
